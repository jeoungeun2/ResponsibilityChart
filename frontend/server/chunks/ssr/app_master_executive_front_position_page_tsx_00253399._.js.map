{"version":3,"sources":["turbopack:///[project]/app/master/executive_front/position/page.tsx","turbopack:///[project]/data/executive-position-data.ts","turbopack:///[project]/app/master/executive_front/_components/AddExecutivePositionForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport H1 from '@/components/layouts/h1';\r\nimport { DataTable } from '@/components/ui/data-table';\r\nimport { Pagination } from '@/components/ui/pagination';\r\nimport CommonBreadcrumb from '../../executive/_components/Breadcrumb';\r\nimport Header from '../_components/Header';\r\nimport { useSidebar } from '@/config/providers';\r\nimport Link from 'next/link';\r\nimport { usePathname } from 'next/navigation';\r\nimport EditIcon from '@/components/ui/edit-icon';\r\nimport DeleteIcon from '@/components/ui/delete-icon';\r\nimport { ExecutivePositionData, executivePositionSampleData } from '@/data/executive-position-data';\r\nimport AddExecutivePositionForm from '../_components/AddExecutivePositionForm';\r\n\r\nexport default function ExecutiveFrontPositionPage() {\r\n  const { isSidebarCollapsed } = useSidebar();\r\n  const pathname = usePathname();\r\n  const [tableColumns, setTableColumns] = useState<any[]>([]);\r\n  \r\n  // 필터 관련 상태 관리\r\n  const [searchFilters, setSearchFilters] = useState<Record<string, string>>({\r\n    referenceDate: '',\r\n    position: '',\r\n    employeeId: '',\r\n    name: ''\r\n  });\r\n\r\n  // H1 필터용 추가 상태 관리\r\n  const [h1Filters, setH1Filters] = useState<Record<string, string>>({\r\n    position: '',\r\n    jobTitle: '',\r\n    managedOrganization: ''\r\n  });\r\n\r\n  // 추가 폼 관련 상태 관리\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [formData, setFormData] = useState<Record<string, string>>({});\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editingRow, setEditingRow] = useState<any>(null);\r\n\r\n  // 페이지네이션 관련 상태 관리\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const totalPages = 5; // 5개 페이지가 있다고 가정\r\n\r\n  // 실제 데이터는 모두 표시\r\n  const currentData = executivePositionSampleData;\r\n\r\n  // 수정 버튼 클릭 핸들러\r\n  const handleEdit = (row: any) => {\r\n    setEditingRow(row);\r\n    setIsEditMode(true);\r\n    \r\n    // 기존 데이터를 폼에 설정\r\n    setFormData({\r\n      name: row.name || '',\r\n      position: row.position || '',\r\n      jobTitle: row.jobTitle || '',\r\n      employeeId: row.employeeId || '',\r\n      phoneNumber: row.phoneNumber || '',\r\n      email: row.email || '',\r\n      termStartDate: row.termStartDate || '',\r\n      termEndDate: row.termEndDate || '',\r\n      hasConcurrentPosition: row.hasConcurrentPosition || '',\r\n      concurrentPositionDetails: row.concurrentPositionDetails || ''\r\n    });\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  // 컬럼 정의\r\n  const columns: any[] = [\r\n    {\r\n      key: \"name\" as keyof ExecutivePositionData,\r\n      header: \"성명\",\r\n      visible: true,\r\n      width: \"w-24\"\r\n    },\r\n    {\r\n      key: \"jobTitle\" as keyof ExecutivePositionData,\r\n      header: \"직위\",\r\n      visible: true,\r\n      width: \"w-24\"\r\n    },\r\n    {\r\n      key: \"employeeId\" as keyof ExecutivePositionData,\r\n      header: \"사번\",\r\n      visible: true,\r\n      width: \"w-24\"\r\n    },\r\n    {\r\n      key: \"positionCode\" as keyof ExecutivePositionData,\r\n      header: \"직책코드\",\r\n      visible: true,\r\n      width: \"w-32\"\r\n    },\r\n    {\r\n      key: \"position\" as keyof ExecutivePositionData,\r\n      header: \"직책\",\r\n      visible: true,\r\n      width: \"w-48\"\r\n    },\r\n    {\r\n      key: \"positionStartDate\" as keyof ExecutivePositionData,\r\n      header: \"직책부여일자\",\r\n      visible: true,\r\n      width: \"w-32\"\r\n    },\r\n    {\r\n      key: \"positionEndDate\" as keyof ExecutivePositionData,\r\n      header: \"직책회수일자\",\r\n      visible: true,\r\n      width: \"w-32\",\r\n      render: (value: any, row: any) => (\r\n        <span>{value || '-'}</span>\r\n      )\r\n    },\r\n    {\r\n      key: \"actions\",\r\n      header: \"액션\",\r\n      visible: true,\r\n      width: \"w-32\",\r\n      render: (value: any, row: any) => (\r\n        <div className=\"flex items-center space-x-2\">\r\n          <EditIcon \r\n            className=\"h-4 w-4\" \r\n            onClick={() => handleEdit(row)}\r\n          />\r\n          <DeleteIcon \r\n            className=\"h-4 w-4\" \r\n            onClick={() => console.log('삭제:', row.id)}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  // columns가 정의된 후 tableColumns 상태를 업데이트\r\n  useEffect(() => {\r\n    setTableColumns(columns);\r\n  }, []);\r\n\r\n  // 필터 옵션들\r\n  const filterOptions = {\r\n    position: [\r\n      { value: \"대표이사\", label: \"대표이사\" },\r\n      { value: \"ETF투자부문장\", label: \"ETF투자부문장\" },\r\n      { value: \"감사실장\", label: \"감사실장\" },\r\n      { value: \"경영관리부문장\", label: \"경영관리부문장\" },\r\n      { value: \"글로벌투자부문장\", label: \"글로벌투자부문장\" },\r\n      { value: \"금융소비자보호실장\", label: \"금융소비자보호실장\" },\r\n      { value: \"리스크관리부문장\", label: \"리스크관리부문장\" },\r\n      { value: \"IT시스템부문장\", label: \"IT시스템부문장\" },\r\n      { value: \"재무관리실장\", label: \"재무관리실장\" },\r\n      { value: \"인사팀장\", label: \"인사팀장\" }\r\n    ]\r\n  };\r\n\r\n  // 추가 버튼 클릭 핸들러\r\n  const handleShowAddForm = () => {\r\n    setIsEditMode(false);\r\n    setEditingRow(null);\r\n    setShowAddForm(true);\r\n    setFormData({}); // 폼 초기화\r\n  };\r\n\r\n  // 모달 닫기 핸들러\r\n  const handleCloseModal = () => {\r\n    setShowAddForm(false);\r\n    setIsEditMode(false);\r\n    setEditingRow(null);\r\n    setFormData({});\r\n  };\r\n\r\n  // 필터 변경 핸들러\r\n  const handleFilterChange = (key: string, value: string) => {\r\n    setSearchFilters(prev => ({\r\n      ...prev,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  // H1 필터 변경 핸들러\r\n  const handleH1FilterChange = (key: string, value: string) => {\r\n    setH1Filters(prev => ({\r\n      ...prev,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  // 폼 데이터 변경 핸들러\r\n  const handleFormDataChange = (data: Record<string, string>) => {\r\n    setFormData(data);\r\n  };\r\n\r\n  // 추가/수정 핸들러\r\n  const handleAdd = (newData: any) => {\r\n    console.log('폼 데이터:', newData);\r\n    console.log('선택된 임원:', newData.executive);\r\n    console.log('직책 목록:', newData.positions);\r\n    if (isEditMode) {\r\n      alert('수정되었습니다.');\r\n    } else {\r\n      alert('추가되었습니다.');\r\n    }\r\n    handleCloseModal();\r\n  };\r\n\r\n  // 일괄 삭제 핸들러\r\n  const handleBulkDelete = (selectedIds: string[]) => {\r\n    if (confirm(`선택된 ${selectedIds.length}명의 임원을 삭제하시겠습니까?`)) {\r\n      console.log('일괄 삭제:', selectedIds);\r\n      alert(`${selectedIds.length}명의 임원이 삭제되었습니다.`);\r\n    }\r\n  };\r\n\r\n  // 페이지 변경 핸들러\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n    console.log(`페이지 ${page}로 이동`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <Header \r\n        rightContent={\r\n          <div className=\"flex items-center space-x-3\">\r\n            <button className=\"text-gray-900 font-semibold px-4 py-2 text-sm transition-colors flex items-center space-x-2 hover:bg-gray-900/20 cursor-pointer\">\r\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n              </svg>\r\n              <span>다운로드</span>\r\n            </button>\r\n          </div>\r\n        }\r\n      />\r\n      <div className={`w-full space-y-6 ${isSidebarCollapsed ? 'px-2' : 'px-4'}`}>\r\n        <CommonBreadcrumb />\r\n        \r\n        {/* 탭 네비게이션 */}\r\n        <div className=\"flex space-x-1 border-b border-gray-200\">\r\n          <Link href=\"/master/executive_front\" className={`px-4 py-2 text-sm font-medium border-b-2 transition-colors ${\r\n            pathname === '/master/executive_front' \r\n              ? 'text-brand-600 border-brand-600' \r\n              : 'text-gray-500 border-transparent hover:text-gray-700 hover:border-gray-300'\r\n          }`}>\r\n            임원리스트 관리\r\n          </Link>\r\n          <Link href=\"/master/executive_front/position\" className={`px-4 py-2 text-sm font-medium border-b-2 transition-colors ${\r\n            pathname === '/master/executive_front/position' \r\n              ? 'text-brand-600 border-brand-600' \r\n              : 'text-gray-500 border-transparent hover:text-gray-700 hover:border-gray-300'\r\n          }`}>\r\n            임원별 직책관리\r\n          </Link>\r\n          <Link href=\"/master/executive_front/concurrent\" className={`px-4 py-2 text-sm font-medium border-b-2 transition-colors ${\r\n            pathname === '/master/executive_front/concurrent' \r\n              ? 'text-brand-600 border-brand-600' \r\n              : 'text-gray-500 border-transparent hover:text-gray-700 hover:border-gray-300'\r\n          }`}>\r\n            겸직내역 관리\r\n          </Link>\r\n          <Link href=\"/master/executive_front/evaluation\" className={`px-4 py-2 text-sm font-medium border-b-2 transition-colors ${\r\n            pathname === '/master/executive_front/evaluation' \r\n              ? 'text-brand-600 border-brand-600' \r\n              : 'text-gray-500 border-transparent hover:text-gray-700 hover:border-gray-300'\r\n          }`}>\r\n            임원적격성평가\r\n          </Link>\r\n        </div>\r\n        \r\n        <H1 \r\n          title=\"임원별 직책관리\" \r\n        />\r\n        \r\n        <DataTable\r\n          data={currentData}\r\n          columns={tableColumns}\r\n          onColumnsChange={setTableColumns}\r\n          className=\"w-full\"\r\n          // 필터 관련 props\r\n          searchFilters={searchFilters}\r\n          onFilterChange={handleFilterChange}\r\n          filterOptions={filterOptions}\r\n          filters={[\r\n            {\r\n              key: \"referenceDate\",\r\n              label: \"조회기준일자\",\r\n              type: \"date\" as const,\r\n              width: \"w-36\",\r\n              required: true,\r\n              labelClassName: \"text-orange-600 font-medium\"\r\n            },\r\n            {\r\n              key: \"position\",\r\n              label: \"직책\",\r\n              type: \"dropdown\" as const,\r\n              width: \"w-32\"\r\n            },\r\n            {\r\n              key: \"employeeId\",\r\n              label: \"사번\",\r\n              type: \"input\" as const,\r\n              width: \"w-32\"\r\n            },\r\n            {\r\n              key: \"name\",\r\n              label: \"성명\",\r\n              type: \"input\" as const,\r\n              width: \"w-32\"\r\n            }\r\n          ]}\r\n          // 체크박스 활성화\r\n          enableRowSelection={true}\r\n          // 일괄 삭제 버튼 활성화\r\n          enableBulkDelete={true}\r\n          // 일괄 삭제 핸들러\r\n          onBulkDelete={handleBulkDelete}\r\n          // 추가 버전 2 사용\r\n          enableAddFormV2={true}\r\n          addFormV2Modal={\r\n            <AddExecutivePositionForm\r\n              isOpen={showAddForm}\r\n              onClose={handleCloseModal}\r\n              onSubmit={handleAdd}\r\n              isEditMode={isEditMode}\r\n              initialData={editingRow}\r\n            />\r\n          }\r\n          onShowAddFormV2={handleShowAddForm}\r\n          // 기존 추가 폼 비활성화\r\n          enableAddForm={false}\r\n          showAddForm={false}\r\n          onShowAddForm={() => {}}\r\n          formData={{}}\r\n          formFields={[]}\r\n          onFormDataChange={() => {}}\r\n          onAdd={() => {}}\r\n          isAddLoading={false}\r\n          isNameValid={true}\r\n          // 액션 컬럼 비활성화 (별도 actions 컬럼 사용)\r\n          showActionColumn={false}\r\n        />\r\n\r\n        {/* 페이지네이션 */}\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          onPageChange={handlePageChange}\r\n          className=\"mt-6 mb-8\"\r\n        />\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export interface ExecutivePositionData {\r\n  id: string;\r\n  name: string;\r\n  jobTitle: string;\r\n  employeeId: string;\r\n  positionCode: string;\r\n  position: string;\r\n  positionStartDate: string;\r\n  positionEndDate: string | null;\r\n}\r\n\r\nexport const executivePositionSampleData: ExecutivePositionData[] = [\r\n  {\r\n    id: \"1\",\r\n    name: \"이도현\",\r\n    jobTitle: \"대표이사\",\r\n    employeeId: \"A05001\",\r\n    positionCode: \"CEO001\",\r\n    position: \"대표이사\",\r\n    positionStartDate: \"2024.01.01\",\r\n    positionEndDate: null\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"황준호\",\r\n    jobTitle: \"상무\",\r\n    employeeId: \"B06002\",\r\n    positionCode: \"ETF001\",\r\n    position: \"ETF투자부문장\",\r\n    positionStartDate: \"2024.01.15\",\r\n    positionEndDate: null\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"윤태섭\",\r\n    jobTitle: \"실장\",\r\n    employeeId: \"C07003\",\r\n    positionCode: \"AUD001\",\r\n    position: \"감사실장\",\r\n    positionStartDate: \"2024.02.01\",\r\n    positionEndDate: null\r\n  },\r\n  {\r\n    id: \"4\",\r\n    name: \"노지환\",\r\n    jobTitle: \"상무\",\r\n    employeeId: \"D08004\",\r\n    positionCode: \"MGT001\",\r\n    position: \"경영관리부문장\",\r\n    positionStartDate: \"2024.01.20\",\r\n    positionEndDate: null\r\n  },\r\n  {\r\n    id: \"5\",\r\n    name: \"정유진\",\r\n    jobTitle: \"부문장\",\r\n    employeeId: \"E09005\",\r\n    positionCode: \"GLB001\",\r\n    position: \"글로벌투자부문장\",\r\n    positionStartDate: \"2024.02.15\",\r\n    positionEndDate: null\r\n  },\r\n  {\r\n    id: \"6\",\r\n    name: \"임혜진\",\r\n    jobTitle: \"이사대우\",\r\n    employeeId: \"F10006\",\r\n    positionCode: \"CNS001\",\r\n    position: \"금융소비자보호실장\",\r\n    positionStartDate: \"2024.03.01\",\r\n    positionEndDate: null\r\n  },\r\n  {\r\n    id: \"7\",\r\n    name: \"김성철\",\r\n    jobTitle: \"상무\",\r\n    employeeId: \"G11007\",\r\n    positionCode: \"RSK001\",\r\n    position: \"리스크관리부문장\",\r\n    positionStartDate: \"2024.01.10\",\r\n    positionEndDate: null\r\n  },\r\n  {\r\n    id: \"8\",\r\n    name: \"박영수\",\r\n    jobTitle: \"부문장\",\r\n    employeeId: \"H12008\",\r\n    positionCode: \"IT001\",\r\n    position: \"IT시스템부문장\",\r\n    positionStartDate: \"2024.02.20\",\r\n    positionEndDate: null\r\n  },\r\n  {\r\n    id: \"9\",\r\n    name: \"최민아\",\r\n    jobTitle: \"실장\",\r\n    employeeId: \"I13009\",\r\n    positionCode: \"FIN001\",\r\n    position: \"재무관리실장\",\r\n    positionStartDate: \"2024.03.15\",\r\n    positionEndDate: null\r\n  },\r\n  {\r\n    id: \"10\",\r\n    name: \"이준혁\",\r\n    jobTitle: \"팀장\",\r\n    employeeId: \"J14010\",\r\n    positionCode: \"HR001\",\r\n    position: \"인사팀장\",\r\n    positionStartDate: \"2024.01.25\",\r\n    positionEndDate: \"2024.06.30\"\r\n  }\r\n];\r\n","\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { \r\n  DropdownMenu, \r\n  DropdownMenuContent, \r\n  DropdownMenuItem, \r\n  DropdownMenuTrigger \r\n} from '@/components/ui/dropdown-menu';\r\nimport { Plus, X, Search, ChevronDown, Maximize2, Minimize2 } from 'lucide-react';\r\nimport { organizationSampleData } from '@/data/organization-data';\r\n\r\ninterface ExecutivePosition {\r\n  id: string;\r\n  positionCode: string;\r\n  positionName: string;\r\n  positionStartDate: string;\r\n  positionEndDate: string;\r\n}\r\n\r\ninterface AddExecutivePositionFormProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (data: any) => void;\r\n  isEditMode?: boolean;\r\n  initialData?: any;\r\n}\r\n\r\n// 임시 직원 데이터 (실제로는 API에서 가져와야 함)\r\nconst employeeSampleData = [\r\n  { employeeId: 'A05001', name: '이도현', jobTitle: '대표이사' },\r\n  { employeeId: 'A05002', name: '김민준', jobTitle: '상무' },\r\n  { employeeId: 'A05003', name: '박서연', jobTitle: '실장' },\r\n  { employeeId: 'A05004', name: '최우진', jobTitle: '실장' },\r\n  { employeeId: 'A05005', name: '정수빈', jobTitle: '상무' },\r\n  { employeeId: 'A05006', name: '강지우', jobTitle: '실장' },\r\n  { employeeId: 'A05007', name: '윤하은', jobTitle: '상무' },\r\n  { employeeId: 'A05008', name: '송민호', jobTitle: '실장' },\r\n  { employeeId: 'A05009', name: '한소영', jobTitle: '상무' },\r\n  { employeeId: 'A05010', name: '임재혁', jobTitle: '실장' }\r\n];\r\n\r\n// 직책(조직) Master 데이터에서 고유한 직책만 추출\r\nconst getUniquePositions = () => {\r\n  const uniquePositions = new Map();\r\n  organizationSampleData.forEach(org => {\r\n    if (!uniquePositions.has(org.jobCode)) {\r\n      uniquePositions.set(org.jobCode, {\r\n        positionCode: org.jobCode,\r\n        positionName: org.jobTitle\r\n      });\r\n    }\r\n  });\r\n  return Array.from(uniquePositions.values());\r\n};\r\n\r\nconst positionSampleData = getUniquePositions();\r\n\r\nexport default function AddExecutivePositionForm({ \r\n  isOpen, \r\n  onClose, \r\n  onSubmit, \r\n  isEditMode = false, \r\n  initialData \r\n}: AddExecutivePositionFormProps) {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [selectedExecutive, setSelectedExecutive] = useState<{\r\n    employeeId: string;\r\n    name: string;\r\n    jobTitle: string;\r\n  } | null>(null);\r\n  \r\n  const [positions, setPositions] = useState<ExecutivePosition[]>([]);\r\n  const [showExecutiveSearch, setShowExecutiveSearch] = useState(false);\r\n  const [showPositionSearch, setShowPositionSearch] = useState(false);\r\n  const [executiveSearchQuery, setExecutiveSearchQuery] = useState('');\r\n  const [positionSearchQuery, setPositionSearchQuery] = useState('');\r\n  const [filteredExecutives, setFilteredExecutives] = useState(employeeSampleData);\r\n  const [filteredPositions, setFilteredPositions] = useState(positionSampleData);\r\n\r\n  // 유틸: 공통 라벨 클래스\r\n  const labelCls = \"block text-base font-medium text-gray-600 mb-1\";\r\n\r\n  const toggleExpand = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  // 초기 데이터 설정\r\n  useEffect(() => {\r\n    if (isEditMode && initialData) {\r\n      setSelectedExecutive({\r\n        employeeId: initialData.employeeId || '',\r\n        name: initialData.name || '',\r\n        jobTitle: initialData.jobTitle || ''\r\n      });\r\n      // 초기 직책 데이터\r\n      if (initialData.positionCode && initialData.position) {\r\n        setPositions([{\r\n          id: '1',\r\n          positionCode: initialData.positionCode,\r\n          positionName: initialData.position,\r\n          positionStartDate: initialData.positionStartDate || '',\r\n          positionEndDate: initialData.positionEndDate || ''\r\n        }]);\r\n      }\r\n    } else {\r\n      // 신규 추가 시 초기화\r\n      setSelectedExecutive(null);\r\n      setPositions([]);\r\n    }\r\n  }, [isEditMode, initialData, isOpen]);\r\n\r\n  // 직원 검색 필터링\r\n  useEffect(() => {\r\n    if (executiveSearchQuery.trim() === '') {\r\n      setFilteredExecutives(employeeSampleData);\r\n    } else {\r\n      const filtered = employeeSampleData.filter(emp => \r\n        emp.employeeId.toLowerCase().includes(executiveSearchQuery.toLowerCase()) ||\r\n        emp.name.toLowerCase().includes(executiveSearchQuery.toLowerCase())\r\n      );\r\n      setFilteredExecutives(filtered);\r\n    }\r\n  }, [executiveSearchQuery]);\r\n\r\n  // 직책 검색 필터링\r\n  useEffect(() => {\r\n    if (positionSearchQuery.trim() === '') {\r\n      setFilteredPositions(positionSampleData);\r\n    } else {\r\n      const filtered = positionSampleData.filter(pos => \r\n        pos.positionCode.toLowerCase().includes(positionSearchQuery.toLowerCase()) ||\r\n        pos.positionName.toLowerCase().includes(positionSearchQuery.toLowerCase())\r\n      );\r\n      setFilteredPositions(filtered);\r\n    }\r\n  }, [positionSearchQuery]);\r\n\r\n  const handleSelectExecutive = (executive: { employeeId: string; name: string; jobTitle: string }) => {\r\n    setSelectedExecutive(executive);\r\n    setExecutiveSearchQuery('');\r\n    setShowExecutiveSearch(false);\r\n  };\r\n\r\n  const handleAddPosition = (position: { positionCode: string; positionName: string }) => {\r\n    console.log('Adding position:', position); // 디버깅용\r\n    \r\n    // 이미 추가된 직책인지 확인\r\n    const alreadyExists = positions.some(pos => pos.positionCode === position.positionCode);\r\n    if (alreadyExists) {\r\n      alert('이미 추가된 직책입니다.');\r\n      return;\r\n    }\r\n\r\n    const newPosition: ExecutivePosition = {\r\n      id: Date.now().toString(),\r\n      positionCode: position.positionCode,\r\n      positionName: position.positionName,\r\n      positionStartDate: '',\r\n      positionEndDate: ''\r\n    };\r\n\r\n    setPositions(prev => [...prev, newPosition]);\r\n    setPositionSearchQuery('');\r\n    setShowPositionSearch(false);\r\n    \r\n    console.log('Position added successfully'); // 디버깅용\r\n  };\r\n\r\n  const handleRemovePosition = (positionId: string) => {\r\n    setPositions(prev => prev.filter(pos => pos.id !== positionId));\r\n  };\r\n\r\n  const handlePositionDateChange = (positionId: string, field: 'positionStartDate' | 'positionEndDate', value: string) => {\r\n    setPositions(prev => prev.map(pos => \r\n      pos.id === positionId \r\n        ? { ...pos, [field]: value }\r\n        : pos\r\n    ));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // 필수 필드 검증\r\n    if (!selectedExecutive) {\r\n      alert('임원을 선택해주세요.');\r\n      return;\r\n    }\r\n    if (positions.length === 0) {\r\n      alert('최소 1개의 직책을 추가해주세요.');\r\n      return;\r\n    }\r\n    \r\n    // 직책 시작일 검증\r\n    for (const position of positions) {\r\n      if (!position.positionStartDate) {\r\n        alert('모든 직책의 시작일을 입력해주세요.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 폼 데이터 제출\r\n    const submitData = {\r\n      executive: selectedExecutive,\r\n      positions: positions\r\n    };\r\n\r\n    onSubmit(submitData);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/30\">\r\n      <div \r\n        className={`border border-warm-grey-600/50 shadow-2xl transition-all duration-300 ease-in-out ${\r\n          isExpanded \r\n            ? 'max-w-[95vw] max-h-[95vh] w-[95vw] h-[95vh]' \r\n            : 'max-w-3xl max-h-[85vh] w-[80vw] h-[85vh]'\r\n        } flex flex-col`}\r\n      >\r\n        {/* 헤더 */}\r\n        <div className=\"flex justify-between items-center flex-shrink-0\">\r\n          {/* 헤더 내용 */}\r\n          <div className=\"flex justify-between items-center w-full relative z-50 border-b border-white/20 py-1 px-2 relative bg-white/10 backdrop-blur-md\">\r\n            <div className=\"flex items-center\">\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={toggleExpand}\r\n                className=\"h-7 w-7 p-0 text-white bg-gray-700/30 cursor-pointer hover:bg-gray-700/40\"\r\n              >\r\n                {isExpanded ? (\r\n                  <Minimize2 className=\"h-5 w-5 text-white font-semibold\" />\r\n                ) : (\r\n                  <Maximize2 className=\"h-5 w-5 text-white font-semibold\" />\r\n                )}\r\n              </Button>\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={onClose}\r\n                className=\"h-7 w-7 p-0 text-white bg-gray-700/30 cursor-pointer hover:bg-gray-700/40\"\r\n              >\r\n                <X className=\"h-5 w-5 text-white font-semibold\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 컨텐츠 */}\r\n        <div className=\"flex-1 overflow-y-auto bg-white\">\r\n          {/* =============== 제목 =============== */}\r\n          <div className=\"py-4 bg-[#f7f7f8] border-b border-gray-200\">\r\n            <div className=\"px-6 border-l-4 border-[#EC6437]\">\r\n              <h2 className=\"text-xl font-bold text-[#EC6437]\">\r\n                {isEditMode ? '임원별 직책정보 수정' : '임원별 직책정보 등록'}\r\n              </h2>\r\n            </div>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-2 bg-white px-2\">\r\n            {/* =============== 임원 선택 =============== */}\r\n            <section className=\"p-4 border-b border-gray-200 pb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                임원 선택\r\n              </h3>\r\n              \r\n              <div className=\"grid grid-cols-12 gap-4\">\r\n                <div className=\"col-span-12\">\r\n                  <div className=\"flex justify-between items-center mb-3\">\r\n                    <label className={labelCls}>\r\n                      임원 정보 <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outline\"\r\n                      size=\"sm\"\r\n                      onClick={() => setShowExecutiveSearch(true)}\r\n                      className=\"flex items-center space-x-2\"\r\n                    >\r\n                      <Search className=\"w-4 h-4\" />\r\n                      <span>임원 찾기</span>\r\n                    </Button>\r\n                  </div>\r\n\r\n                  {selectedExecutive ? (\r\n                    <div className=\"p-4 rounded-lg border border-orange-200\" style={{ backgroundColor: '#FEE8D6' }}>\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"grid grid-cols-3 gap-4 flex-1\">\r\n                          <div>\r\n                            <span className=\"text-sm text-gray-600\">사번</span>\r\n                            <div className=\"text-sm font-medium\">{selectedExecutive.employeeId}</div>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"text-sm text-gray-600\">성명</span>\r\n                            <div className=\"text-sm font-medium\">{selectedExecutive.name}</div>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"text-sm text-gray-600\">직위</span>\r\n                            <div className=\"text-sm font-medium\">{selectedExecutive.jobTitle}</div>\r\n                          </div>\r\n                        </div>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => setSelectedExecutive(null)}\r\n                          className=\"text-red-500 hover:text-red-700 ml-4\"\r\n                        >\r\n                          <X className=\"w-4 h-4\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center py-8 text-gray-500 border-2 border-dashed border-gray-300 rounded-lg\">\r\n                      임원을 선택해주세요.\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            {/* 임원 검색 모달 */}\r\n            {showExecutiveSearch && (\r\n              <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-60\">\r\n                <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h3 className=\"text-lg font-semibold\">임원 검색</h3>\r\n                    <button\r\n                      onClick={() => setShowExecutiveSearch(false)}\r\n                      className=\"text-gray-400 hover:text-gray-600\"\r\n                    >\r\n                      <X className=\"w-5 h-5\" />\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"mb-4\">\r\n                    <div className=\"relative\">\r\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"사번 또는 성명으로 검색\"\r\n                        value={executiveSearchQuery}\r\n                        onChange={(e) => setExecutiveSearchQuery(e.target.value)}\r\n                        className=\"pl-10\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"max-h-60 overflow-y-auto space-y-2\">\r\n                    {filteredExecutives.map((executive) => (\r\n                      <div\r\n                        key={executive.employeeId}\r\n                        className=\"flex items-center justify-between p-3 hover:bg-gray-50 rounded-lg cursor-pointer border\"\r\n                        onClick={() => handleSelectExecutive(executive)}\r\n                      >\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <span className=\"text-sm font-medium\">{executive.employeeId}</span>\r\n                          <span className=\"text-sm\">{executive.name}</span>\r\n                          <span className=\"text-sm text-gray-500\">{executive.jobTitle}</span>\r\n                        </div>\r\n                        <Plus className=\"w-4 h-4 text-blue-500\" />\r\n                      </div>\r\n                    ))}\r\n                    {filteredExecutives.length === 0 && (\r\n                      <div className=\"text-center py-4 text-gray-500\">\r\n                        검색 결과가 없습니다.\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* =============== 직책 관리 =============== */}\r\n            <section className=\"p-4 border-b border-gray-200 pb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                직책 관리\r\n              </h3>\r\n              \r\n              <div className=\"grid grid-cols-12 gap-4\">\r\n                <div className=\"col-span-12\">\r\n                  <div className=\"flex justify-between items-center mb-3\">\r\n                    <label className={labelCls}>\r\n                      직책 정보 <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outline\"\r\n                      size=\"sm\"\r\n                      onClick={() => {\r\n                        if (!selectedExecutive) {\r\n                          alert('먼저 임원을 선택해주세요.');\r\n                          return;\r\n                        }\r\n                        console.log('Available positions:', positionSampleData); // 디버깅용\r\n                        setShowPositionSearch(true);\r\n                      }}\r\n                      className=\"flex items-center space-x-2\"\r\n                    >\r\n                      <Plus className=\"w-4 h-4\" />\r\n                      <span>직책 추가</span>\r\n                    </Button>\r\n                  </div>\r\n\r\n                  {/* 추가된 직책 목록 */}\r\n                  <div className=\"space-y-3 mb-4\">\r\n                    {positions.map((position) => (\r\n                      <div\r\n                        key={position.id}\r\n                        className=\"p-4 bg-gray-50 rounded-lg border\"\r\n                      >\r\n                        <div className=\"grid grid-cols-6 gap-4 items-center\">\r\n                          <div className=\"col-span-1\">\r\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">직책코드</label>\r\n                            <span className=\"text-sm font-medium\">{position.positionCode}</span>\r\n                          </div>\r\n                          <div className=\"col-span-2\">\r\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">직책명</label>\r\n                            <span className=\"text-sm\">{position.positionName}</span>\r\n                          </div>\r\n                          <div className=\"col-span-1\">\r\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">시작일 <span className=\"text-red-500\">*</span></label>\r\n                            <Input\r\n                              type=\"date\"\r\n                              value={position.positionStartDate}\r\n                              onChange={(e) => handlePositionDateChange(position.id, 'positionStartDate', e.target.value)}\r\n                              className=\"w-full h-8 text-sm\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-span-1\">\r\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">종료일</label>\r\n                            <Input\r\n                              type=\"date\"\r\n                              value={position.positionEndDate}\r\n                              onChange={(e) => handlePositionDateChange(position.id, 'positionEndDate', e.target.value)}\r\n                              className=\"w-full h-8 text-sm\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-span-1 flex justify-end\">\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => handleRemovePosition(position.id)}\r\n                              className=\"text-red-500 hover:text-red-700\"\r\n                            >\r\n                              <X className=\"w-4 h-4\" />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                    {positions.length === 0 && (\r\n                      <div className=\"text-center py-8 text-gray-500 border-2 border-dashed border-gray-300 rounded-lg\">\r\n                        직책을 추가해주세요.\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            {/* 직책 검색 모달 */}\r\n            {showPositionSearch && (\r\n              <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-60\">\r\n                <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h3 className=\"text-lg font-semibold\">직책 검색</h3>\r\n                    <button\r\n                      onClick={() => setShowPositionSearch(false)}\r\n                      className=\"text-gray-400 hover:text-gray-600\"\r\n                    >\r\n                      <X className=\"w-5 h-5\" />\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"mb-4\">\r\n                    <div className=\"relative\">\r\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"직책코드 또는 직책명으로 검색\"\r\n                        value={positionSearchQuery}\r\n                        onChange={(e) => setPositionSearchQuery(e.target.value)}\r\n                        className=\"pl-10\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"max-h-60 overflow-y-auto space-y-2\">\r\n                    {filteredPositions.map((position) => (\r\n                      <div\r\n                        key={position.positionCode}\r\n                        className=\"flex items-center justify-between p-3 hover:bg-gray-50 rounded-lg cursor-pointer border\"\r\n                        onClick={() => handleAddPosition(position)}\r\n                      >\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <span className=\"text-sm font-medium\">{position.positionCode}</span>\r\n                          <span className=\"text-sm\">{position.positionName}</span>\r\n                        </div>\r\n                        <Plus className=\"w-4 h-4 text-blue-500\" />\r\n                      </div>\r\n                    ))}\r\n                    {filteredPositions.length === 0 && (\r\n                      <div className=\"text-center py-4 text-gray-500\">\r\n                        검색 결과가 없습니다.\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* =============== 액션 버튼 =============== */}\r\n            <div className=\"flex flex-wrap gap-3 justify-end pt-3 border-t border-gray-200 pr-4 pb-4 sticky bottom-0 bg-white/30 backdrop-blur-sm\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                onClick={onClose}\r\n                className=\"py-1.5 w-21 text-sm font-semibold text-gray-800 border-gray-800 hover:bg-gray-50 hover:text-gray-800 cursor-pointer\"\r\n              >\r\n                취소\r\n              </Button>\r\n              <Button \r\n                type=\"submit\"\r\n                className=\"py-1.5 w-21 text-sm font-semibold bg-gray-900 text-white hover:bg-gray-800 hover:text-white cursor-pointer\"\r\n              >\r\n                {isEditMode ? '수정' : '등록'}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}