{"version":3,"sources":["turbopack:///[project]/app/master/meeting/page.tsx","turbopack:///[project]/data/meeting-data.ts","turbopack:///[project]/app/master/meeting/_components/AddMeetingForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport H1 from '@/components/layouts/h1';\r\nimport { DataTable } from '@/components/ui/data-table';\r\nimport { Pagination } from '@/components/ui/pagination';\r\nimport CommonBreadcrumb from '../executive/_components/Breadcrumb';\r\nimport Header from '../executive/_components/Header';\r\nimport { useSidebar } from '@/config/providers';\r\nimport EditIcon from '@/components/ui/edit-icon';\r\nimport DeleteIcon from '@/components/ui/delete-icon';\r\nimport { MeetingData, meetingSampleData } from '@/data/meeting-data';\r\nimport AddMeetingForm from './_components/AddMeetingForm';\r\n\r\nexport default function MeetingMasterPage() {\r\n  const { isSidebarCollapsed } = useSidebar();\r\n  const [tableColumns, setTableColumns] = useState<any[]>([]);\r\n  \r\n  // 필터 관련 상태 관리\r\n  const [searchFilters, setSearchFilters] = useState<Record<string, string>>({\r\n    meetingBody: '',\r\n    employeeId: '',\r\n    name: ''\r\n  });\r\n\r\n  // H1 필터용 추가 상태 관리\r\n  const [h1Filters, setH1Filters] = useState<Record<string, string>>({\r\n    meetingBody: '',\r\n    roleType: '',\r\n    name: ''\r\n  });\r\n\r\n  // 추가 폼 관련 상태 관리\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [formData, setFormData] = useState<Record<string, string>>({});\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editingRow, setEditingRow] = useState<any>(null);\r\n\r\n  // 페이지네이션 관련 상태 관리\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const totalPages = 5; // 5개 페이지가 있다고 가정\r\n\r\n  // 실제 데이터는 모두 표시\r\n  const currentData = meetingSampleData;\r\n\r\n  // 수정 버튼 클릭 핸들러\r\n  const handleEdit = (row: any) => {\r\n    setEditingRow(row);\r\n    setIsEditMode(true);\r\n    \r\n    // 기존 데이터를 폼에 설정\r\n    setFormData({\r\n      meetingBody: row.meetingBody || '',\r\n      roleType: row.roleType || '',\r\n      meetingFrequency: row.meetingFrequency || '',\r\n      mainDecisions: row.mainDecisions || '',\r\n      employeeId: row.employeeId || '',\r\n      name: row.name || '',\r\n      effectiveStartDate: row.effectiveStartDate || '',\r\n      effectiveEndDate: row.effectiveEndDate || ''\r\n    });\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  // 컬럼 정의\r\n  const columns: any[] = [\r\n    {\r\n      key: \"meetingBody\" as keyof MeetingData,\r\n      header: \"주관회의체\",\r\n      visible: true,\r\n      width: \"w-32\"\r\n    },\r\n    {\r\n      key: \"roleType\" as keyof MeetingData,\r\n      header: \"위원장/위원\",\r\n      visible: true,\r\n      width: \"w-28\"\r\n    },\r\n    {\r\n      key: \"meetingFrequency\" as keyof MeetingData,\r\n      header: \"개최주기\",\r\n      visible: true,\r\n      width: \"w-24\"\r\n    },\r\n    {\r\n      key: \"mainDecisions\" as keyof MeetingData,\r\n      header: \"주요심의의결사항\",\r\n      visible: true,\r\n      width: \"w-48\"\r\n    },\r\n    {\r\n      key: \"employeeId\" as keyof MeetingData,\r\n      header: \"사번\",\r\n      visible: true,\r\n      width: \"w-24\"\r\n    },\r\n    {\r\n      key: \"name\" as keyof MeetingData,\r\n      header: \"성명\",\r\n      visible: true,\r\n      width: \"w-24\"\r\n    },\r\n    {\r\n      key: \"effectiveStartDate\" as keyof MeetingData,\r\n      header: \"적용시작일자\",\r\n      visible: true,\r\n      width: \"w-32\"\r\n    },\r\n    {\r\n      key: \"effectiveEndDate\" as keyof MeetingData,\r\n      header: \"적용종료일자\",\r\n      visible: true,\r\n      width: \"w-32\",\r\n      render: (value: any, row: any) => (\r\n        <span>{value || '-'}</span>\r\n      )\r\n    },\r\n    {\r\n      key: \"actions\",\r\n      header: \"액션\",\r\n      visible: true,\r\n      width: \"w-32\",\r\n      render: (value: any, row: any) => (\r\n        <div className=\"flex items-center space-x-2\">\r\n          <EditIcon \r\n            className=\"h-4 w-4\" \r\n            onClick={() => handleEdit(row)}\r\n          />\r\n          <DeleteIcon \r\n            className=\"h-4 w-4\" \r\n            onClick={() => console.log('삭제:', row.id)}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  // columns가 정의된 후 tableColumns 상태를 업데이트\r\n  useEffect(() => {\r\n    setTableColumns(columns);\r\n  }, []);\r\n\r\n  // 필터 옵션들\r\n  const filterOptions = {\r\n    meetingBody: [\r\n      { value: \"이사회\", label: \"이사회\" },\r\n      { value: \"리스크관리위원회\", label: \"리스크관리위원회\" },\r\n      { value: \"감사위원회\", label: \"감사위원회\" },\r\n      { value: \"투자위원회\", label: \"투자위원회\" },\r\n      { value: \"IT위원회\", label: \"IT위원회\" },\r\n      { value: \"소비자보호위원회\", label: \"소비자보호위원회\" },\r\n      { value: \"경영관리위원회\", label: \"경영관리위원회\" }\r\n    ]\r\n  };\r\n\r\n  // 추가 버튼 클릭 핸들러\r\n  const handleShowAddForm = () => {\r\n    setIsEditMode(false);\r\n    setEditingRow(null);\r\n    setShowAddForm(true);\r\n    setFormData({}); // 폼 초기화\r\n  };\r\n\r\n  // 모달 닫기 핸들러\r\n  const handleCloseModal = () => {\r\n    setShowAddForm(false);\r\n    setIsEditMode(false);\r\n    setEditingRow(null);\r\n    setFormData({});\r\n  };\r\n\r\n  // 필터 변경 핸들러\r\n  const handleFilterChange = (key: string, value: string) => {\r\n    setSearchFilters(prev => ({\r\n      ...prev,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  // H1 필터 변경 핸들러\r\n  const handleH1FilterChange = (key: string, value: string) => {\r\n    setH1Filters(prev => ({\r\n      ...prev,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  // 폼 데이터 변경 핸들러\r\n  const handleFormDataChange = (data: Record<string, string>) => {\r\n    setFormData(data);\r\n  };\r\n\r\n  // 추가/수정 핸들러\r\n  const handleAdd = (newData: any) => {\r\n    console.log('폼 데이터:', newData);\r\n    console.log('멤버 데이터:', newData.members);\r\n    if (isEditMode) {\r\n      alert('수정되었습니다.');\r\n    } else {\r\n      alert('추가되었습니다.');\r\n    }\r\n    handleCloseModal();\r\n  };\r\n\r\n  // 일괄 삭제 핸들러\r\n  const handleBulkDelete = (selectedIds: string[]) => {\r\n    if (confirm(`선택된 ${selectedIds.length}개의 회의체 정보를 삭제하시겠습니까?`)) {\r\n      console.log('일괄 삭제:', selectedIds);\r\n      alert(`${selectedIds.length}개의 회의체 정보가 삭제되었습니다.`);\r\n    }\r\n  };\r\n\r\n  // 페이지 변경 핸들러\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n    console.log(`페이지 ${page}로 이동`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <Header \r\n        rightContent={\r\n          <div className=\"flex items-center space-x-3\">\r\n            <button className=\"text-gray-900 font-semibold px-4 py-2 text-sm transition-colors flex items-center space-x-2 hover:bg-gray-900/20 cursor-pointer\">\r\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n              </svg>\r\n              <span>다운로드</span>\r\n            </button>\r\n          </div>\r\n        }\r\n      />\r\n      <div className={`w-full space-y-6 ${isSidebarCollapsed ? 'px-2' : 'px-4'}`}>\r\n        <CommonBreadcrumb />\r\n        <H1 \r\n          title=\"회의체 Master\" \r\n        />\r\n        \r\n        <DataTable\r\n          data={currentData}\r\n          columns={tableColumns}\r\n          onColumnsChange={setTableColumns}\r\n          className=\"w-full\"\r\n          // 필터 관련 props\r\n          searchFilters={searchFilters}\r\n          onFilterChange={handleFilterChange}\r\n          filterOptions={filterOptions}\r\n          filters={[\r\n            {\r\n              key: \"meetingBody\",\r\n              label: \"회의체\",\r\n              type: \"dropdown\" as const,\r\n              width: \"w-32\"\r\n            },\r\n            {\r\n              key: \"employeeId\",\r\n              label: \"사번\",\r\n              type: \"input\" as const,\r\n              width: \"w-32\"\r\n            },\r\n            {\r\n              key: \"name\",\r\n              label: \"성명\",\r\n              type: \"input\" as const,\r\n              width: \"w-32\"\r\n            }\r\n          ]}\r\n          // 체크박스 활성화\r\n          enableRowSelection={true}\r\n          // 일괄 삭제 버튼 활성화\r\n          enableBulkDelete={true}\r\n          // 일괄 삭제 핸들러\r\n          onBulkDelete={handleBulkDelete}\r\n          // 추가 버전 2 사용 (조직 마스터와 동일하게)\r\n          enableAddFormV2={true}\r\n          addFormV2Modal={\r\n            <AddMeetingForm\r\n              isOpen={showAddForm}\r\n              onClose={handleCloseModal}\r\n              onSubmit={handleAdd}\r\n              isEditMode={isEditMode}\r\n              initialData={editingRow}\r\n            />\r\n          }\r\n          onShowAddFormV2={handleShowAddForm}\r\n          // 기존 추가 폼 비활성화\r\n          enableAddForm={false}\r\n          showAddForm={showAddForm}\r\n          onShowAddForm={() => {}}\r\n          formData={formData}\r\n          formFields={[]}\r\n          onFormDataChange={handleFormDataChange}\r\n          onAdd={handleAdd}\r\n          isAddLoading={false}\r\n          isNameValid={true}\r\n          // 액션 컬럼 비활성화 (별도 actions 컬럼 사용)\r\n          showActionColumn={false}\r\n        />\r\n\r\n        {/* 페이지네이션 */}\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          onPageChange={handlePageChange}\r\n          className=\"mt-6 mb-8\"\r\n        />\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export interface MeetingData {\r\n  id: string;\r\n  meetingBody: string; // 주관회의체\r\n  roleType: string; // 위원장/위원\r\n  meetingFrequency: string; // 개최주기\r\n  mainDecisions: string; // 주요심의의결사항\r\n  employeeId: string; // 사번\r\n  name: string; // 성명\r\n  effectiveStartDate: string; // 적용시작일자\r\n  effectiveEndDate: string | null; // 적용종료일자\r\n}\r\n\r\nexport const meetingSampleData: MeetingData[] = [\r\n  {\r\n    id: \"1\",\r\n    meetingBody: \"이사회\",\r\n    roleType: \"위원장\",\r\n    meetingFrequency: \"월 1회\",\r\n    mainDecisions: \"경영전략, 투자승인, 예산승인\",\r\n    employeeId: \"A05001\",\r\n    name: \"이도현\",\r\n    effectiveStartDate: \"2024.01.01\",\r\n    effectiveEndDate: null\r\n  },\r\n  {\r\n    id: \"2\",\r\n    meetingBody: \"이사회\",\r\n    roleType: \"위원\",\r\n    meetingFrequency: \"월 1회\",\r\n    mainDecisions: \"경영전략, 투자승인, 예산승인\",\r\n    employeeId: \"B06002\",\r\n    name: \"황준호\",\r\n    effectiveStartDate: \"2024.01.15\",\r\n    effectiveEndDate: null\r\n  },\r\n  {\r\n    id: \"3\",\r\n    meetingBody: \"리스크관리위원회\",\r\n    roleType: \"위원장\",\r\n    meetingFrequency: \"월 2회\",\r\n    mainDecisions: \"리스크관리정책, 위험한도설정\",\r\n    employeeId: \"G11007\",\r\n    name: \"김성철\",\r\n    effectiveStartDate: \"2024.02.01\",\r\n    effectiveEndDate: null\r\n  },\r\n  {\r\n    id: \"4\",\r\n    meetingBody: \"리스크관리위원회\",\r\n    roleType: \"위원\",\r\n    meetingFrequency: \"월 2회\",\r\n    mainDecisions: \"리스크관리정책, 위험한도설정\",\r\n    employeeId: \"B06002\",\r\n    name: \"황준호\",\r\n    effectiveStartDate: \"2024.02.01\",\r\n    effectiveEndDate: null\r\n  },\r\n  {\r\n    id: \"5\",\r\n    meetingBody: \"감사위원회\",\r\n    roleType: \"위원장\",\r\n    meetingFrequency: \"분기 1회\",\r\n    mainDecisions: \"내부감사계획, 감사결과보고\",\r\n    employeeId: \"C07003\",\r\n    name: \"윤태섭\",\r\n    effectiveStartDate: \"2024.01.01\",\r\n    effectiveEndDate: null\r\n  },\r\n  {\r\n    id: \"6\",\r\n    meetingBody: \"투자위원회\",\r\n    roleType: \"위원장\",\r\n    meetingFrequency: \"월 1회\",\r\n    mainDecisions: \"투자심의, 포트폴리오관리\",\r\n    employeeId: \"E09005\",\r\n    name: \"정유진\",\r\n    effectiveStartDate: \"2024.01.20\",\r\n    effectiveEndDate: null\r\n  },\r\n  {\r\n    id: \"7\",\r\n    meetingBody: \"투자위원회\",\r\n    roleType: \"위원\",\r\n    meetingFrequency: \"월 1회\",\r\n    mainDecisions: \"투자심의, 포트폴리오관리\",\r\n    employeeId: \"B06002\",\r\n    name: \"황준호\",\r\n    effectiveStartDate: \"2024.01.20\",\r\n    effectiveEndDate: null\r\n  },\r\n  {\r\n    id: \"8\",\r\n    meetingBody: \"IT위원회\",\r\n    roleType: \"위원장\",\r\n    meetingFrequency: \"분기 1회\",\r\n    mainDecisions: \"IT전략수립, 시스템도입승인\",\r\n    employeeId: \"H12008\",\r\n    name: \"박영수\",\r\n    effectiveStartDate: \"2024.03.01\",\r\n    effectiveEndDate: null\r\n  },\r\n  {\r\n    id: \"9\",\r\n    meetingBody: \"소비자보호위원회\",\r\n    roleType: \"위원장\",\r\n    meetingFrequency: \"분기 1회\",\r\n    mainDecisions: \"소비자보호정책, 민원처리방안\",\r\n    employeeId: \"F10006\",\r\n    name: \"임혜진\",\r\n    effectiveStartDate: \"2024.02.15\",\r\n    effectiveEndDate: null\r\n  },\r\n  {\r\n    id: \"10\",\r\n    meetingBody: \"경영관리위원회\",\r\n    roleType: \"위원장\",\r\n    meetingFrequency: \"월 1회\",\r\n    mainDecisions: \"경영관리정책, 조직운영방안\",\r\n    employeeId: \"D08004\",\r\n    name: \"노지환\",\r\n    effectiveStartDate: \"2024.01.10\",\r\n    effectiveEndDate: null\r\n  }\r\n];\r\n","\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { \r\n  DropdownMenu, \r\n  DropdownMenuContent, \r\n  DropdownMenuItem, \r\n  DropdownMenuTrigger \r\n} from '@/components/ui/dropdown-menu';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Plus, X, Search, ChevronDown } from 'lucide-react';\r\n\r\ninterface Member {\r\n  id: string;\r\n  employeeId: string;\r\n  name: string;\r\n  roleType: string; // '위원장' 또는 '위원'\r\n}\r\n\r\ninterface AddMeetingFormProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (data: any) => void;\r\n  isEditMode?: boolean;\r\n  initialData?: any;\r\n}\r\n\r\n// 임시 직원 데이터 (실제로는 API에서 가져와야 함)\r\nconst employeeSampleData = [\r\n  { employeeId: 'A05001', name: '이도현' },\r\n  { employeeId: 'A05002', name: '김민준' },\r\n  { employeeId: 'A05003', name: '박서연' },\r\n  { employeeId: 'A05004', name: '최우진' },\r\n  { employeeId: 'A05005', name: '정수빈' },\r\n  { employeeId: 'A05006', name: '강지우' },\r\n  { employeeId: 'A05007', name: '윤하은' },\r\n  { employeeId: 'A05008', name: '송민호' },\r\n  { employeeId: 'A05009', name: '한소영' },\r\n  { employeeId: 'A05010', name: '임재혁' }\r\n];\r\n\r\nexport default function AddMeetingForm({ \r\n  isOpen, \r\n  onClose, \r\n  onSubmit, \r\n  isEditMode = false, \r\n  initialData \r\n}: AddMeetingFormProps) {\r\n  const [formData, setFormData] = useState({\r\n    meetingBody: '',\r\n    meetingFrequency: '',\r\n    mainDecisions: '',\r\n    effectiveStartDate: '',\r\n    effectiveEndDate: ''\r\n  });\r\n\r\n  const [members, setMembers] = useState<Member[]>([]);\r\n  const [showMemberSearch, setShowMemberSearch] = useState(false);\r\n  const [memberSearchQuery, setMemberSearchQuery] = useState('');\r\n  const [filteredEmployees, setFilteredEmployees] = useState(employeeSampleData);\r\n\r\n  // 위원장/위원 옵션\r\n  const roleOptions = [\r\n    { value: '위원장', label: '위원장' },\r\n    { value: '위원', label: '위원' }\r\n  ];\r\n\r\n  // 개최주기 옵션\r\n  const frequencyOptions = [\r\n    { value: '월 1회', label: '월 1회' },\r\n    { value: '월 2회', label: '월 2회' },\r\n    { value: '분기 1회', label: '분기 1회' },\r\n    { value: '반기 1회', label: '반기 1회' },\r\n    { value: '연 1회', label: '연 1회' },\r\n    { value: '수시', label: '수시' }\r\n  ];\r\n\r\n  // 초기 데이터 설정\r\n  useEffect(() => {\r\n    if (isEditMode && initialData) {\r\n      setFormData({\r\n        meetingBody: initialData.meetingBody || '',\r\n        meetingFrequency: initialData.meetingFrequency || '',\r\n        mainDecisions: initialData.mainDecisions || '',\r\n        effectiveStartDate: initialData.effectiveStartDate || '',\r\n        effectiveEndDate: initialData.effectiveEndDate || ''\r\n      });\r\n      // 초기 멤버 데이터 (기존 데이터에서 추출)\r\n      if (initialData.employeeId && initialData.name) {\r\n        setMembers([{\r\n          id: '1',\r\n          employeeId: initialData.employeeId,\r\n          name: initialData.name,\r\n          roleType: initialData.roleType || '위원'\r\n        }]);\r\n      }\r\n    } else {\r\n      // 신규 추가 시 초기화\r\n      setFormData({\r\n        meetingBody: '',\r\n        meetingFrequency: '',\r\n        mainDecisions: '',\r\n        effectiveStartDate: '',\r\n        effectiveEndDate: ''\r\n      });\r\n      setMembers([]);\r\n    }\r\n  }, [isEditMode, initialData, isOpen]);\r\n\r\n  // 직원 검색 필터링\r\n  useEffect(() => {\r\n    if (memberSearchQuery.trim() === '') {\r\n      setFilteredEmployees(employeeSampleData);\r\n    } else {\r\n      const filtered = employeeSampleData.filter(emp => \r\n        emp.employeeId.toLowerCase().includes(memberSearchQuery.toLowerCase()) ||\r\n        emp.name.toLowerCase().includes(memberSearchQuery.toLowerCase())\r\n      );\r\n      setFilteredEmployees(filtered);\r\n    }\r\n  }, [memberSearchQuery]);\r\n\r\n  const handleInputChange = (field: string, value: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleAddMember = (employee: { employeeId: string; name: string }) => {\r\n    // 이미 추가된 멤버인지 확인\r\n    const alreadyExists = members.some(member => member.employeeId === employee.employeeId);\r\n    if (alreadyExists) {\r\n      alert('이미 추가된 멤버입니다.');\r\n      return;\r\n    }\r\n\r\n    const newMember: Member = {\r\n      id: Date.now().toString(),\r\n      employeeId: employee.employeeId,\r\n      name: employee.name,\r\n      roleType: '위원' // 기본값으로 '위원' 설정\r\n    };\r\n\r\n    setMembers(prev => [...prev, newMember]);\r\n    setMemberSearchQuery('');\r\n    setShowMemberSearch(false);\r\n  };\r\n\r\n  const handleRemoveMember = (memberId: string) => {\r\n    setMembers(prev => prev.filter(member => member.id !== memberId));\r\n  };\r\n\r\n  const handleMemberRoleChange = (memberId: string, roleType: string) => {\r\n    setMembers(prev => prev.map(member => \r\n      member.id === memberId \r\n        ? { ...member, roleType }\r\n        : member\r\n    ));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // 필수 필드 검증\r\n    if (!formData.meetingBody.trim()) {\r\n      alert('주관회의체를 입력해주세요.');\r\n      return;\r\n    }\r\n    if (!formData.meetingFrequency) {\r\n      alert('개최주기를 선택해주세요.');\r\n      return;\r\n    }\r\n    if (!formData.effectiveStartDate) {\r\n      alert('적용시작일자를 입력해주세요.');\r\n      return;\r\n    }\r\n    if (members.length === 0) {\r\n      alert('최소 1명의 멤버를 추가해주세요.');\r\n      return;\r\n    }\r\n    \r\n    // 위원장이 있는지 확인\r\n    const hasChairman = members.some(member => member.roleType === '위원장');\r\n    if (!hasChairman) {\r\n      alert('최소 1명의 위원장을 지정해주세요.');\r\n      return;\r\n    }\r\n\r\n    // 폼 데이터 제출\r\n    const submitData = {\r\n      ...formData,\r\n      members: members\r\n    };\r\n\r\n    onSubmit(submitData);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-xl font-semibold\">\r\n            {isEditMode ? '회의체 정보 수정' : '회의체 정보 추가'}\r\n          </h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600\"\r\n          >\r\n            <X className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          {/* 기본 정보 */}\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                주관회의체 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <Input\r\n                type=\"text\"\r\n                value={formData.meetingBody}\r\n                onChange={(e) => handleInputChange('meetingBody', e.target.value)}\r\n                placeholder=\"주관회의체를 입력하세요\"\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                개최주기 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button \r\n                    variant=\"outline\" \r\n                    className=\"w-full justify-between h-10\"\r\n                  >\r\n                    {formData.meetingFrequency || \"선택하세요\"}\r\n                    <ChevronDown className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-full\">\r\n                  {frequencyOptions.map((option) => (\r\n                    <DropdownMenuItem\r\n                      key={option.value}\r\n                      onClick={() => handleInputChange('meetingFrequency', option.value)}\r\n                      className=\"cursor-pointer\"\r\n                    >\r\n                      {option.label}\r\n                    </DropdownMenuItem>\r\n                  ))}\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                적용시작일자 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <Input\r\n                type=\"date\"\r\n                value={formData.effectiveStartDate}\r\n                onChange={(e) => handleInputChange('effectiveStartDate', e.target.value)}\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                적용종료일자\r\n              </label>\r\n              <Input\r\n                type=\"date\"\r\n                value={formData.effectiveEndDate}\r\n                onChange={(e) => handleInputChange('effectiveEndDate', e.target.value)}\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              주요심의의결사항\r\n            </label>\r\n            <Textarea\r\n              value={formData.mainDecisions}\r\n              onChange={(e) => handleInputChange('mainDecisions', e.target.value)}\r\n              placeholder=\"주요심의의결사항을 입력하세요\"\r\n              rows={4}\r\n              className=\"w-full\"\r\n            />\r\n          </div>\r\n\r\n          {/* 멤버 관리 */}\r\n          <div>\r\n            <div className=\"flex justify-between items-center mb-3\">\r\n              <label className=\"block text-sm font-medium text-gray-700\">\r\n                멤버 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => setShowMemberSearch(true)}\r\n                className=\"flex items-center space-x-2\"\r\n              >\r\n                <Plus className=\"w-4 h-4\" />\r\n                <span>멤버 추가</span>\r\n              </Button>\r\n            </div>\r\n\r\n            {/* 추가된 멤버 목록 */}\r\n            <div className=\"space-y-3 mb-4\">\r\n              {members.map((member) => (\r\n                <div\r\n                  key={member.id}\r\n                  className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\"\r\n                >\r\n                  <div className=\"flex items-center space-x-4 flex-1\">\r\n                    <span className=\"text-sm font-medium w-20\">{member.employeeId}</span>\r\n                    <span className=\"text-sm w-24\">{member.name}</span>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <span className=\"text-sm text-gray-600\">역할:</span>\r\n                      <DropdownMenu>\r\n                        <DropdownMenuTrigger asChild>\r\n                          <Button \r\n                            variant=\"outline\" \r\n                            size=\"sm\"\r\n                            className=\"h-8 px-3\"\r\n                          >\r\n                            {member.roleType}\r\n                            <ChevronDown className=\"h-3 w-3 ml-1\" />\r\n                          </Button>\r\n                        </DropdownMenuTrigger>\r\n                        <DropdownMenuContent>\r\n                          {roleOptions.map((option) => (\r\n                            <DropdownMenuItem\r\n                              key={option.value}\r\n                              onClick={() => handleMemberRoleChange(member.id, option.value)}\r\n                              className=\"cursor-pointer\"\r\n                            >\r\n                              {option.label}\r\n                            </DropdownMenuItem>\r\n                          ))}\r\n                        </DropdownMenuContent>\r\n                      </DropdownMenu>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleRemoveMember(member.id)}\r\n                    className=\"text-red-500 hover:text-red-700 ml-4\"\r\n                  >\r\n                    <X className=\"w-4 h-4\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              {members.length === 0 && (\r\n                <div className=\"text-center py-8 text-gray-500\">\r\n                  추가된 멤버가 없습니다.\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* 멤버 검색 모달 */}\r\n            {showMemberSearch && (\r\n              <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-60\">\r\n                <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h3 className=\"text-lg font-semibold\">멤버 검색</h3>\r\n                    <button\r\n                      onClick={() => setShowMemberSearch(false)}\r\n                      className=\"text-gray-400 hover:text-gray-600\"\r\n                    >\r\n                      <X className=\"w-5 h-5\" />\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"mb-4\">\r\n                    <div className=\"relative\">\r\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"사번 또는 성명으로 검색\"\r\n                        value={memberSearchQuery}\r\n                        onChange={(e) => setMemberSearchQuery(e.target.value)}\r\n                        className=\"pl-10\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"max-h-60 overflow-y-auto space-y-2\">\r\n                    {filteredEmployees.map((employee) => (\r\n                      <div\r\n                        key={employee.employeeId}\r\n                        className=\"flex items-center justify-between p-3 hover:bg-gray-50 rounded-lg cursor-pointer\"\r\n                        onClick={() => handleAddMember(employee)}\r\n                      >\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <span className=\"text-sm font-medium\">{employee.employeeId}</span>\r\n                          <span className=\"text-sm\">{employee.name}</span>\r\n                        </div>\r\n                        <Plus className=\"w-4 h-4 text-blue-500\" />\r\n                      </div>\r\n                    ))}\r\n                    {filteredEmployees.length === 0 && (\r\n                      <div className=\"text-center py-4 text-gray-500\">\r\n                        검색 결과가 없습니다.\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* 버튼 */}\r\n          <div className=\"flex justify-end space-x-3 pt-6 border-t\">\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              onClick={onClose}\r\n            >\r\n              취소\r\n            </Button>\r\n            <Button type=\"submit\">\r\n              {isEditMode ? '수정' : '추가'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}