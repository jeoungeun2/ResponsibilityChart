{"version":3,"sources":["turbopack:///[project]/app/master/organization/page.tsx","turbopack:///[project]/app/master/organization/_components/AddOrganizationForm.tsx","turbopack:///[project]/app/master/organization/_components/CancelButton.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport H1 from '@/components/layouts/h1';\r\nimport { DataTable } from '@/components/ui/data-table';\r\nimport { Pagination } from '@/components/ui/pagination';\r\nimport CommonBreadcrumb from '../executive/_components/Breadcrumb';\r\nimport Header from '../executive/_components/Header';\r\nimport { useSidebar } from '@/config/providers';\r\nimport EditIcon from '@/components/ui/edit-icon';\r\nimport DeleteIcon from '@/components/ui/delete-icon';\r\nimport { OrganizationData, organizationSampleData } from '@/data/organization-data';\r\nimport AddOrganizationForm from './_components/AddOrganizationForm';\r\nimport { StartDateFilter } from '@/components/ui/DateFilter';\r\n\r\nexport default function OrganizationPage() {\r\n  const { isSidebarCollapsed } = useSidebar();\r\n  // 추가 폼 관련 상태 관리\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [formData, setFormData] = useState<Record<string, string>>({});\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editingRow, setEditingRow] = useState<any>(null);\r\n   \r\n  // 조회기준일자 상태 관리\r\n  const [referenceDate, setReferenceDate] = useState<string>(() => {\r\n    const today = new Date();\r\n    return today.toISOString().split('T')[0]; // YYYY-MM-DD 형식\r\n  });\r\n\r\n  // 조회기준일자 변경 시 데이터 재조회\r\n  useEffect(() => {\r\n    console.log('조회기준일자 변경:', referenceDate);\r\n    // 필터 상태도 업데이트\r\n    setSearchFilters(prev => ({\r\n      ...prev,\r\n      referenceDate: referenceDate\r\n    }));\r\n    // 여기에 실제 API 호출 로직을 구현할 수 있습니다\r\n    // 예: fetchOrganizationData(referenceDate);\r\n  }, [referenceDate]);\r\n\r\n  // 필터 관련 상태 관리\r\n  const [searchFilters, setSearchFilters] = useState<Record<string, string>>({\r\n    jobTitle: '',\r\n    orgDivision: '',\r\n    managedOrg: '',\r\n    referenceDate: referenceDate\r\n  });\r\n\r\n\r\n\r\n  // 페이지네이션 관련 상태 관리\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const totalPages = 5; // 5개 페이지가 있다고 가정\r\n\r\n  // 필터 설정 정의\r\n  const filters = [\r\n    {\r\n      key: \"referenceDate\",\r\n      label: \"조회기준일자\",\r\n      type: \"date\" as const,\r\n      width: \"w-auto\"\r\n    },\r\n    {\r\n      key: \"jobTitle\",\r\n      label: \"직책\",\r\n      type: \"dropdown\" as const,\r\n      width: \"w-40\"\r\n    },\r\n    {\r\n      key: \"orgDivision\",\r\n      label: \"조직구분\",\r\n      type: \"dropdown\" as const,\r\n      width: \"w-40\"\r\n    },\r\n    {\r\n      key: \"managedOrg\",\r\n      label: \"관리대상조직\",\r\n      type: \"dropdown\" as const,\r\n      width: \"w-40\"\r\n    }\r\n  ];\r\n\r\n  // 필터 옵션들\r\n  const filterOptions = {\r\n    jobTitle: [\r\n      { value: \"대표이사\", label: \"대표이사\" },\r\n      { value: \"이사회 의장\", label: \"이사회 의장\" },\r\n      { value: \"경영지원\", label: \"경영지원\" },\r\n      { value: \"감사실장\", label: \"감사실장\" },\r\n      { value: \"마케팅총괄부사장\", label: \"마케팅총괄부사장\" }\r\n    ],\r\n    orgDivision: [\r\n      { value: \"대표이사\", label: \"대표이사\" },\r\n      { value: \"이사회 의장\", label: \"이사회 의장\" },\r\n      { value: \"경영지원\", label: \"경영지원\" },\r\n      { value: \"감사실\", label: \"감사실\" },\r\n      { value: \"금융영업\", label: \"금융영업\" }\r\n    ],\r\n    managedOrg: [\r\n      { value: \"대표이사\", label: \"대표이사\" },\r\n      { value: \"이사회 의장\", label: \"이사회 의장\" },\r\n      { value: \"경영지원\", label: \"경영지원\" },\r\n      { value: \"감사실\", label: \"감사실\" },\r\n      { value: \"마케팅총괄부문\", label: \"마케팅총괄부문\" }\r\n    ]\r\n  };\r\n\r\n  // 폼 데이터 변경 핸들러\r\n  const handleFormDataChange = (field: string, value: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  // 수정 버튼 클릭 핸들러\r\n  const handleEdit = (row: any) => {\r\n    setEditingRow(row);\r\n    setIsEditMode(true);\r\n    // 기존 데이터를 폼에 설정\r\n    const newFormData = {\r\n      jobCode: row.jobCode || '',\r\n      jobTitle: row.jobTitle || '',\r\n      orgDivision: row.orgDivision || '',\r\n      managedOrg: row.managedOrg || '',\r\n      responsibleDept: row.responsibleDept || '',\r\n      responsibleTeam: row.responsibleTeam || '',\r\n      startDate: row.effectiveStartDate || '',\r\n      endDate: row.effectiveEndDate || ''\r\n    };\r\n    setFormData(newFormData);\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  // 추가 버튼 클릭 핸들러\r\n  const handleShowAddForm = () => {\r\n    setIsEditMode(false);\r\n    setEditingRow(null);\r\n    setShowAddForm(true);\r\n    setFormData({}); // 폼 초기화\r\n  };\r\n\r\n  // 모달 닫기 핸들러\r\n  const handleCloseModal = () => {\r\n    setShowAddForm(false);\r\n    setIsEditMode(false);\r\n    setEditingRow(null);\r\n    setFormData({});\r\n  };\r\n\r\n  // 추가 처리 핸들러 (기능 없음)\r\n  const handleAdd = () => {\r\n    console.log('추가 기능은 구현되지 않았습니다.', formData);\r\n    // 여기에 실제 추가 로직을 구현할 수 있습니다\r\n  };\r\n\r\n  // 필터 변경 핸들러\r\n  const handleFilterChange = (key: string, value: string) => {\r\n    setSearchFilters(prev => ({\r\n      ...prev,\r\n      [key]: value\r\n    }));\r\n    \r\n    // 조회기준일자 필터가 변경되면 referenceDate 상태도 업데이트\r\n    if (key === 'referenceDate') {\r\n      setReferenceDate(value);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // 페이지 변경 핸들러\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n    console.log(`페이지 ${page}로 이동`);\r\n    // 여기에 실제 페이지 변경 로직을 구현할 수 있습니다\r\n  };\r\n\r\n  // 컬럼 정의 - handleEdit 함수에 접근할 수 있도록 컴포넌트 내부에 정의\r\n  const columns: any[] = [\r\n    {\r\n      key: \"jobCode\" as keyof OrganizationData,\r\n      header: \"직책코드\",\r\n      visible: true\r\n    },\r\n    {\r\n      key: \"jobTitle\" as keyof OrganizationData,\r\n      header: \"직책\",\r\n      visible: true\r\n    },\r\n    {\r\n      key: \"orgDivision\" as keyof OrganizationData,\r\n      header: \"조직구분\",\r\n      visible: true\r\n    },\r\n    {\r\n      key: \"managedOrg\" as keyof OrganizationData,\r\n      header: \"관리대상조직\",\r\n      visible: true\r\n    },\r\n    {\r\n      key: \"responsibleDept\" as keyof OrganizationData,\r\n      header: \"소관부서\",\r\n      visible: true\r\n    },\r\n    {\r\n      key: \"responsibleTeam\" as keyof OrganizationData,\r\n      header: \"소관팀\",\r\n      visible: true\r\n    },\r\n    {\r\n      key: \"registrationDate\" as keyof OrganizationData,\r\n      header: \"등록일자\",\r\n      visible: true\r\n    },\r\n    {\r\n      key: \"effectiveStartDate\" as keyof OrganizationData,\r\n      header: \"적용시작일자\",\r\n      visible: true\r\n    },\r\n    {\r\n      key: \"effectiveEndDate\" as keyof OrganizationData,\r\n      header: \"적용종료일자\",\r\n      visible: true\r\n    },\r\n    {\r\n      key: \"actions\",\r\n      header: \"액션\",\r\n      visible: true,\r\n      render: (value: any, row: any) => (\r\n        <div className=\"flex items-center space-x-2\">\r\n          <EditIcon \r\n            className=\"h-4 w-4\" \r\n            onClick={() => handleEdit(row)}\r\n          />\r\n          <DeleteIcon \r\n            className=\"h-4 w-4\" \r\n            onClick={() => console.log('삭제:', row.id)}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const [tableColumns, setTableColumns] = useState(columns);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <Header \r\n        rightContent={\r\n          <div className=\"flex items-center space-x-3\">\r\n            <button className=\"text-gray-900 font-semibold px-4 py-2 text-sm transition-colors flex items-center space-x-2 hover:bg-gray-900/20 cursor-pointer\">\r\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n              </svg>\r\n              <span>다운로드</span>\r\n            </button>\r\n          </div>\r\n        }\r\n      />\r\n      <div className={`w-full space-y-6 ${isSidebarCollapsed ? 'px-2' : 'px-4'}`}>\r\n        <CommonBreadcrumb />\r\n        <H1 \r\n          title=\"직책(조직) Master\" \r\n        />\r\n        \r\n        <DataTable\r\n          data={organizationSampleData}\r\n          columns={tableColumns}\r\n          onColumnsChange={setTableColumns}\r\n          className=\"w-full\"\r\n          // 필터 관련 props\r\n          searchFilters={searchFilters}\r\n          onFilterChange={handleFilterChange}\r\n          filterOptions={filterOptions}\r\n          filters={filters}\r\n          // 추가 버전 2 사용\r\n          enableAddFormV2={true}\r\n          addFormV2Modal={\r\n            <AddOrganizationForm\r\n              key={`${isEditMode}-${editingRow?.id || 'new'}`}\r\n              open={showAddForm}\r\n              onOpenChange={handleCloseModal}\r\n              formData={formData}\r\n              onFormDataChange={handleFormDataChange}\r\n              onAdd={handleAdd}\r\n              isLoading={false}\r\n              disabled={false}\r\n              isEdit={isEditMode}\r\n            />\r\n          }\r\n          onShowAddFormV2={handleShowAddForm}\r\n          // 기존 추가 폼 비활성화\r\n          enableAddForm={false}\r\n          showAddForm={false}\r\n          onShowAddForm={() => {}}\r\n          formData={{}}\r\n          formFields={[]}\r\n          onFormDataChange={() => {}}\r\n          onAdd={() => {}}\r\n          isAddLoading={false}\r\n          isNameValid={true}\r\n          // 액션 컬럼 비활성화 (별도 actions 컬럼 사용)\r\n          showActionColumn={false}\r\n        />\r\n\r\n        {/* 페이지네이션 */}\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          onPageChange={handlePageChange}\r\n          className=\"mt-6 mb-8\"\r\n        />\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Maximize2, Minimize2, X, Search, ChevronDown } from 'lucide-react';\r\nimport { StartDateFilter, EndDateFilter } from '@/components/ui/DateFilter';\r\n\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from '@/components/ui/dropdown-menu';\r\nimport AddButton from '@/components/ui/add-button';\r\nimport DeleteButton from '@/components/ui/delete-button';\r\nimport SaveButton from '../../department/_components/SaveButton';\r\nimport CancelButton from './CancelButton';\r\n\r\ninterface AddOrganizationFormProps {\r\n  open: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n  formData: Record<string, any>;\r\n  onFormDataChange: (field: string, value: any) => void;\r\n  onAdd: () => void;\r\n  isLoading?: boolean;\r\n  disabled?: boolean;\r\n  isEdit?: boolean;\r\n}\r\n\r\nexport default function AddOrganizationForm({\r\n  open,\r\n  onOpenChange,\r\n  formData,\r\n  onFormDataChange,\r\n  onAdd,\r\n  isLoading = false,\r\n  disabled = false,\r\n  isEdit = false\r\n}: AddOrganizationFormProps) {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  \r\n  // 소관부서와 소관팀을 세트로 관리하는 상태\r\n  const [responsibleDeptTeams, setResponsibleDeptTeams] = useState<Array<{\r\n    dept: string;\r\n    teams: string[];\r\n  }>>(\r\n    formData.responsibleDept && formData.responsibleTeam \r\n      ? [{ dept: formData.responsibleDept, teams: [formData.responsibleTeam] }]\r\n      : [{ dept: \"\", teams: [\"\"] }]\r\n  );\r\n  \r\n  // formData가 변경될 때 responsible 배열들 업데이트\r\n  useEffect(() => {\r\n    if (formData.responsibleDept && formData.responsibleTeam) {\r\n      setResponsibleDeptTeams([{ dept: formData.responsibleDept, teams: [formData.responsibleTeam] }]);\r\n    } else {\r\n      setResponsibleDeptTeams([{ dept: \"\", teams: [\"\"] }]);\r\n    }\r\n  }, [formData.responsibleDept, formData.responsibleTeam]);\r\n  \r\n  // 유틸: 공통 인풋 클래스\r\n  const labelCls = \"block text-base font-medium text-gray-600 mb-1\";\r\n\r\n  // 소관부서-팀 세트 관리 함수들\r\n  const addResponsibleDeptTeam = () => \r\n    setResponsibleDeptTeams(prev => [...prev, { dept: \"\", teams: [\"\"] }]);\r\n  \r\n  const removeResponsibleDeptTeam = (index: number) => \r\n    setResponsibleDeptTeams(prev => prev.length > 1 ? prev.filter((_, i) => i !== index) : prev);\r\n  \r\n  const updateResponsibleDept = (index: number, value: string) =>\r\n    setResponsibleDeptTeams(prev => {\r\n      const next = [...prev];\r\n      next[index] = { ...next[index], dept: value };\r\n      return next;\r\n    });\r\n\r\n  const addResponsibleTeam = (deptIndex: number) =>\r\n    setResponsibleDeptTeams(prev => {\r\n      const next = [...prev];\r\n      next[deptIndex] = {\r\n        ...next[deptIndex],\r\n        teams: [...next[deptIndex].teams, \"\"]\r\n      };\r\n      return next;\r\n    });\r\n\r\n  const removeResponsibleTeam = (deptIndex: number, teamIndex: number) =>\r\n    setResponsibleDeptTeams(prev => {\r\n      const next = [...prev];\r\n      if (next[deptIndex].teams.length > 1) {\r\n        next[deptIndex] = {\r\n          ...next[deptIndex],\r\n          teams: next[deptIndex].teams.filter((_, i) => i !== teamIndex)\r\n        };\r\n      }\r\n      return next;\r\n    });\r\n\r\n  const updateResponsibleTeam = (deptIndex: number, teamIndex: number, value: string) =>\r\n    setResponsibleDeptTeams(prev => {\r\n      const next = [...prev];\r\n      next[deptIndex] = {\r\n        ...next[deptIndex],\r\n        teams: next[deptIndex].teams.map((team, i) => i === teamIndex ? value : team)\r\n      };\r\n      return next;\r\n    });\r\n\r\n  const handleAdd = () => {\r\n    onAdd();\r\n    if (!isLoading && !disabled) {\r\n      onOpenChange(false);\r\n    }\r\n  };\r\n\r\n  const toggleExpand = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  if (!open) return null;\r\n\r\n  // 직책에 따른 직책코드 자동 생성 함수\r\n  const generateJobCode = (jobTitle: string) => {\r\n    const jobCodeMap: Record<string, string> = {\r\n      '대표이사': 'CE',\r\n      '이사회 의장': 'BD',\r\n      '준법감시인': 'CO',\r\n      '감사실장': 'AU',\r\n      '마케팅총괄부사장': 'MK',\r\n      '재무총괄부사장': 'FI',\r\n      'IT총괄부사장': 'IT',\r\n      '인사총괄부사장': 'HR',\r\n      '영업총괄부사장': 'SA',\r\n      '리스크총괄부사장': 'RS'\r\n    };\r\n    return jobCodeMap[jobTitle] || '';\r\n  };\r\n\r\n  // 직책 입력 시 직책코드 자동 생성\r\n  const handleJobTitleChange = (value: string) => {\r\n    onFormDataChange(\"jobTitle\", value);\r\n    const generatedCode = generateJobCode(value);\r\n    if (generatedCode) {\r\n      onFormDataChange(\"jobCode\", generatedCode);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/30\">\r\n      <div \r\n        className={`border border-warm-grey-600/50 shadow-2xl transition-all duration-300 ease-in-out ${\r\n          isExpanded \r\n            ? 'max-w-[95vw] max-h-[95vh] w-[95vw] h-[95vh]' \r\n            : 'max-w-3xl max-h-[85vh] w-[80vw] h-[85vh]'\r\n        } flex flex-col`}\r\n      >\r\n        {/* 헤더 */}\r\n        <div className=\"flex justify-between items-center flex-shrink-0\">\r\n          {/* 헤더 내용 */}\r\n          <div className=\"flex justify-between items-center w-full relative z-50 border-b border-white/20 py-1 px-2 relative bg-white/10 backdrop-blur-md\">\r\n            <div className=\"flex items-center\">\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={toggleExpand}\r\n                className=\"h-7 w-7 p-0 text-white bg-gray-700/30 cursor-pointer hover:bg-gray-700/40\"\r\n              >\r\n                {isExpanded ? (\r\n                  <Minimize2 className=\"h-5 w-5 text-white font-semibold\" />\r\n                ) : (\r\n                  <Maximize2 className=\"h-5 w-5 text-white font-semibold\" />\r\n                )}\r\n              </Button>\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={() => onOpenChange(false)}\r\n                className=\"h-7 w-7 p-0 text-white bg-gray-700/30 cursor-pointer hover:bg-gray-700/40\"\r\n              >\r\n                <X className=\"h-5 w-5 text-white font-semibold\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 컨텐츠 */}\r\n        <div className=\"flex-1 overflow-y-auto bg-white\">\r\n          {/* =============== 제목 =============== */}\r\n          <div className=\"py-4 bg-[#f7f7f8] border-b border-gray-200\">\r\n            <div className=\"px-6 border-l-4 border-[#EC6437]\">\r\n              <h2 className=\"text-xl font-bold text-[#EC6437]\">\r\n                {isEdit ? '직책 및 조직 수정등록' : '직책 및 조직 신규등록'}\r\n              </h2>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-2 bg-white px-2\">\r\n            {/* =============== 직책 정보 =============== */}\r\n            <section className=\"p-4 border-b border-gray-200 pb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                직책 정보\r\n              </h3>\r\n\r\n              <div className=\"grid grid-cols-12 gap-4\">\r\n                <div className=\"col-span-12 md:col-span-6\">\r\n                  <label className={labelCls}>\r\n                    직책 <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"직책을 입력하세요\"\r\n                    value={formData.jobTitle || \"\"}\r\n                    onChange={(e) => handleJobTitleChange(e.target.value)}\r\n                    className=\"w-full\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-span-12 md:col-span-6\">\r\n                  <label className={labelCls}>\r\n                    직책코드 <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"직책코드가 자동으로 생성됩니다\"\r\n                    value={formData.jobCode || \"\"}\r\n                    readOnly\r\n                    className=\"w-full bg-gray-50 text-gray-600\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            {/* =============== 조직 정보 =============== */}\r\n            <section className=\"p-4 border-b border-gray-200 pb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                조직 정보\r\n              </h3>\r\n\r\n              <div className=\"grid grid-cols-12 gap-4\">\r\n                <div className=\"col-span-12 md:col-span-6\">\r\n                  <label className={labelCls}>\r\n                    조직구분 <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <DropdownMenu>\r\n                    <DropdownMenuTrigger asChild>\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        className=\"w-full px-4 justify-between\"\r\n                      >\r\n                        <span className=\"truncate flex-1 text-left\">\r\n                          {formData.orgDivision || \"선택하세요\"}\r\n                        </span>\r\n                        <ChevronDown className=\"ml-2 h-4 w-4 flex-shrink-0\" />\r\n                      </Button>\r\n                    </DropdownMenuTrigger>\r\n                    <DropdownMenuContent align=\"start\" className=\"w-full\">\r\n                      <DropdownMenuItem\r\n                        onClick={() => onFormDataChange(\"orgDivision\", \"\")}\r\n                        className=\"cursor-pointer\"\r\n                      >\r\n                        선택하세요\r\n                      </DropdownMenuItem>\r\n                      <DropdownMenuItem\r\n                        onClick={() => onFormDataChange(\"orgDivision\", \"대표이사\")}\r\n                        className=\"cursor-pointer\"\r\n                      >\r\n                        대표이사\r\n                      </DropdownMenuItem>\r\n                      <DropdownMenuItem\r\n                        onClick={() => onFormDataChange(\"orgDivision\", \"이사회 의장\")}\r\n                        className=\"cursor-pointer\"\r\n                      >\r\n                        이사회 의장\r\n                      </DropdownMenuItem>\r\n                      <DropdownMenuItem\r\n                        onClick={() => onFormDataChange(\"orgDivision\", \"경영지원\")}\r\n                        className=\"cursor-pointer\"\r\n                      >\r\n                        경영지원\r\n                      </DropdownMenuItem>\r\n                      <DropdownMenuItem\r\n                        onClick={() => onFormDataChange(\"orgDivision\", \"감사실\")}\r\n                        className=\"cursor-pointer\"\r\n                      >\r\n                        감사실\r\n                      </DropdownMenuItem>\r\n                      <DropdownMenuItem\r\n                        onClick={() => onFormDataChange(\"orgDivision\", \"금융영업\")}\r\n                        className=\"cursor-pointer\"\r\n                      >\r\n                        금융영업\r\n                      </DropdownMenuItem>\r\n                    </DropdownMenuContent>\r\n                  </DropdownMenu>\r\n                </div>\r\n\r\n                <div className=\"col-span-12 md:col-span-6\">\r\n                  <label className={labelCls}>\r\n                    관리대상조직 <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"관리대상조직을 입력하세요\"\r\n                      value={formData.managedOrg ?? \"\"}\r\n                      onChange={(e) => onFormDataChange(\"managedOrg\", e.target.value)}\r\n                      className=\"pr-10\"\r\n                    />\r\n                    <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 소관부서 및 소관팀 */}\r\n                <div className=\"col-span-12\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <label className={labelCls}>소관부서 및 소관팀</label>\r\n                    <AddButton onClick={addResponsibleDeptTeam} />\r\n                  </div>\r\n                  \r\n                  <div className=\"space-y-4\">\r\n                    {responsibleDeptTeams.map((deptTeam, deptIdx) => (\r\n                      <div key={`dept-team-${deptIdx}`} className=\"border border-gray-200 rounded-lg p-4 bg-gray-50\">\r\n                        <div className=\"flex items-center justify-between mb-3\">\r\n                          <h4 className=\"text-sm font-medium text-gray-700\">소관부서 {deptIdx + 1}</h4>\r\n                          <DeleteButton onClick={() => removeResponsibleDeptTeam(deptIdx)} />\r\n                        </div>\r\n                        \r\n                        {/* 소관부서와 소관팀을 좌우로 배치 */}\r\n                        <div className=\"grid grid-cols-12 gap-4\">\r\n                          {/* 소관부서 - 왼쪽 */}\r\n                          <div className=\"col-span-12 md:col-span-6\">\r\n                            <label className=\"block text-sm font-medium text-gray-600 mb-1\">\r\n                              소관부서\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"소관부서를 입력하세요\"\r\n                                value={deptTeam.dept}\r\n                                onChange={(e) => updateResponsibleDept(deptIdx, e.target.value)}\r\n                                className=\"pr-10\"\r\n                              />\r\n                              <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                            </div>\r\n                          </div>\r\n                          \r\n                          {/* 소관팀들 - 오른쪽 */}\r\n                          <div className=\"col-span-12 md:col-span-6\">\r\n                            <div className=\"flex items-center justify-between mb-2\">\r\n                              <label className=\"block text-sm font-medium text-gray-600\">소관팀</label>\r\n                              <AddButton onClick={() => addResponsibleTeam(deptIdx)} />\r\n                            </div>\r\n                            \r\n                            <div className=\"space-y-2\">\r\n                              {deptTeam.teams.map((team, teamIdx) => (\r\n                                <div key={`team-${deptIdx}-${teamIdx}`} className=\"flex items-center gap-2\">\r\n                                  <div className=\"relative flex-1\">\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      placeholder=\"소관팀을 입력하세요\"\r\n                                      value={team}\r\n                                      onChange={(e) => updateResponsibleTeam(deptIdx, teamIdx, e.target.value)}\r\n                                      className=\"pr-10\"\r\n                                    />\r\n                                    <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                                  </div>\r\n                                  <DeleteButton onClick={() => removeResponsibleTeam(deptIdx, teamIdx)} />\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            {/* =============== 책무 및 책무상세 =============== */}\r\n           \r\n            {/* =============== 대상기간 =============== */}\r\n            <section className=\"p-4 border-b border-gray-200 pb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                대상기간\r\n              </h3>\r\n\r\n              <div className=\"grid grid-cols-12 gap-4\">\r\n                <div className=\"col-span-12 md:col-span-6\">\r\n                  <label className={labelCls}>\r\n                    적용시작일자 <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <StartDateFilter\r\n                    startDate={formData.startDate ?? \"\"}\r\n                    onStartDateChange={(date) => onFormDataChange(\"startDate\", date)}\r\n                    placeholder=\"연도-월-일\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            {/* =============== 액션 버튼 =============== */}\r\n            <div className=\"flex flex-wrap gap-3 justify-end pt-3 border-t border-gray-200 pr-4 pb-4 sticky bottom-0 bg-white/30 backdrop-blur-sm\">\r\n              <SaveButton onClick={handleAdd} disabled={isLoading || disabled} />\r\n              <CancelButton onClick={() => onOpenChange(false)} disabled={isLoading} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\"use client\";\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport { X } from 'lucide-react';\r\n\r\ninterface CancelButtonProps {\r\n  onClick?: () => void;\r\n  disabled?: boolean;\r\n  className?: string;\r\n}\r\n\r\nexport default function CancelButton({ onClick, disabled = false, className = \"\" }: CancelButtonProps) {\r\n  return (\r\n    <Button\r\n      variant=\"outline\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      className={`py-1.5 w-21 text-sm font-semibold text-gray-800 border-gray-800 hover:bg-gray-50 hover:text-gray-800 cursor-pointer ${className}`}\r\n    >\r\n      <X className=\"h-4 w-4 mr-2\" />\r\n      취소\r\n    </Button>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}