// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
}


// Validate ..\..\app\(path)\signin\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\(path)\\signin\\page.js")
  handler satisfies AppPageConfig<"/signin">
}

// Validate ..\..\app\(path)\signup\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\(path)\\signup\\page.js")
  handler satisfies AppPageConfig<"/signup">
}

// Validate ..\..\app\improvement-implementation\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\improvement-implementation\\page.js")
  handler satisfies AppPageConfig<"/improvement-implementation">
}

// Validate ..\..\app\management-action-generation\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\management-action-generation\\page.js")
  handler satisfies AppPageConfig<"/management-action-generation">
}

// Validate ..\..\app\management-action\department\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\management-action\\department\\page.js")
  handler satisfies AppPageConfig<"/management-action/department">
}

// Validate ..\..\app\management-action\executive\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\management-action\\executive\\page.js")
  handler satisfies AppPageConfig<"/management-action/executive">
}

// Validate ..\..\app\master\department\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\master\\department\\page.js")
  handler satisfies AppPageConfig<"/master/department">
}

// Validate ..\..\app\master\executive\detail\[id]\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\master\\executive\\detail\\[id]\\page.js")
  handler satisfies AppPageConfig<"/master/executive/detail/[id]">
}

// Validate ..\..\app\master\executive\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\master\\executive\\page.js")
  handler satisfies AppPageConfig<"/master/executive">
}

// Validate ..\..\app\master\executive_front\concurrent\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\master\\executive_front\\concurrent\\page.js")
  handler satisfies AppPageConfig<"/master/executive_front/concurrent">
}

// Validate ..\..\app\master\executive_front\evaluation\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\master\\executive_front\\evaluation\\page.js")
  handler satisfies AppPageConfig<"/master/executive_front/evaluation">
}

// Validate ..\..\app\master\executive_front\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\master\\executive_front\\page.js")
  handler satisfies AppPageConfig<"/master/executive_front">
}

// Validate ..\..\app\master\executive_front\position\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\master\\executive_front\\position\\page.js")
  handler satisfies AppPageConfig<"/master/executive_front/position">
}

// Validate ..\..\app\master\meeting\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\master\\meeting\\page.js")
  handler satisfies AppPageConfig<"/master/meeting">
}

// Validate ..\..\app\master\organization\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\master\\organization\\page.js")
  handler satisfies AppPageConfig<"/master/organization">
}

// Validate ..\..\app\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ..\..\app\responsibility-check\management\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\responsibility-check\\management\\page.js")
  handler satisfies AppPageConfig<"/responsibility-check/management">
}

// Validate ..\..\app\responsibility-check\status\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\responsibility-check\\status\\page.js")
  handler satisfies AppPageConfig<"/responsibility-check/status">
}

// Validate ..\..\app\responsibility-management\allocation\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\responsibility-management\\allocation\\page.js")
  handler satisfies AppPageConfig<"/responsibility-management/allocation">
}

// Validate ..\..\app\responsibility-management\description\management\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\responsibility-management\\description\\management\\page.js")
  handler satisfies AppPageConfig<"/responsibility-management/description/management">
}

// Validate ..\..\app\responsibility-management\description\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\responsibility-management\\description\\page.js")
  handler satisfies AppPageConfig<"/responsibility-management/description">
}

// Validate ..\..\app\responsibility-management\system-diagram\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\responsibility-management\\system-diagram\\page.js")
  handler satisfies AppPageConfig<"/responsibility-management/system-diagram">
}

// Validate ..\..\app\api\auth\[...nextauth]\route.ts
{
  const handler = {} as typeof import("..\\..\\app\\api\\auth\\[...nextauth]\\route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/[...nextauth]">
}

// Validate ..\..\app\api\backend\[...path]\route.ts
{
  const handler = {} as typeof import("..\\..\\app\\api\\backend\\[...path]\\route.js")
  handler satisfies RouteHandlerConfig<"/api/backend/[...path]">
}

// Validate ..\..\app\api\backend\test\route.ts
{
  const handler = {} as typeof import("..\\..\\app\\api\\backend\\test\\route.js")
  handler satisfies RouteHandlerConfig<"/api/backend/test">
}





// Validate ..\..\app\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\layout.js")
  handler satisfies LayoutConfig<"/">
}

// Validate ..\..\app\management-action\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\management-action\\layout.js")
  handler satisfies LayoutConfig<"/management-action">
}

// Validate ..\..\app\master\executive_front\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\master\\executive_front\\layout.js")
  handler satisfies LayoutConfig<"/master/executive_front">
}

// Validate ..\..\app\master\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\master\\layout.js")
  handler satisfies LayoutConfig<"/master">
}

// Validate ..\..\app\responsibility-check\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\responsibility-check\\layout.js")
  handler satisfies LayoutConfig<"/responsibility-check">
}

// Validate ..\..\app\responsibility-management\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\responsibility-management\\layout.js")
  handler satisfies LayoutConfig<"/responsibility-management">
}
